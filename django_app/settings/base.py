"""
Django settings for django_app project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'phonenumber_field',
    'rest_framework_simplejwt',
    'oauth2_provider',
    'dot_restrict_scopes',
    'users_pets_api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_app.wsgi.application'

# Note:
#   This is an example of how multiple applications could go to multiple databases. Since this is a simple example
#   when the default django user's entity / model / table is used also as a foreign key for part of the exercise all
#   the routers go to the same database (users_pets_api) and we don't get any benefit from separating data in multiple
#   routers since we would lose the availability of foreign keys reference to the user model risking the integrity of
#   data of the pet owners entity information. I just leave it here as an example of how we can use routers to separate
#   data from multiple applications

DATABASE_ROUTERS = [
    'django_app.routers.AdminProviderRouter',
    'django_app.routers.AuthProviderRouter',
    'django_app.routers.ContentTypesProviderRouter',
    'django_app.routers.SessionsProviderRouter',
    'django_app.routers.OAuth2DOTProviderRouter',
    'django_app.routers.OAuth2DOTRestrictScopesProviderRouter',
    'users_pets_api.routers.UsersPetsAPIProviderRouter'
]

# User Model (Adding additional exercise fields)
AUTH_USER_MODEL = 'users_pets_api.Person'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# OAuth2 Provider Settings

OAUTH2_PROVIDER_APPLICATION_MODEL = 'dot_restrict_scopes.RestrictedApplication'

OAUTH2_PROVIDER = {
    'SCOPES': {
        'read-all': 'Read all data',
        'create-all': 'Create all data',
        'update-all': 'Update all data',
        'delete-all': 'Delete all data',
        'read-not-sensitive': 'Read only not sensitive data',
        'create-not-sensitive': 'Create not sensitive data',
        'update-not-sensitive': 'Update not sensitive data',
        'delete-not-sensitive': 'Delete not sensitive data'
    },
    'DEFAULT_SCOPES': [
        'read-not-sensitive'
    ],
    'SCOPES_BACKEND_CLASS': 'dot_restrict_scopes.scopes.RestrictApplicationScopes',
    'ACCESS_TOKEN_EXPIRE_SECONDS' : 36000
}

DOT_RESTRICT_SCOPES = {
    'WRAPPED_SCOPES_BACKEND_CLASS': 'oauth2_provider.scopes.SettingsScopes',
}
